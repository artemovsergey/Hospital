@page "/signm"
@using Hospital.Data.Models
@rendermode RenderMode.InteractiveServer

@inject PatientRepository repo
@inject MedicalCardRepository mrepo

@inject NavigationManager manager

<PageTitle>Создание карты для пацинета</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <EditForm Model="@p" OnSubmit="@Submit">
                <label>Пациент </label>
                <input type="text" @bind="p.PassportSerial" class="m-2 p-2 form-control" placeholder="Серия паспорта" />
                <input type="text" @bind="p.PassportNumber" class="m-2 p-2 form-control" placeholder="Номер паспорта" />
                <input type="submit" class="m-2 p-2 btn btn-primary" value="Завести карту" />
            </EditForm>
        </div>
    </div>
</div>


@code {
    Patient p = new Patient();


    async Task Submit(){

        HttpClient httpClient = new();

        var response = await httpClient.GetAsync($"http://192.168.1.3:7029/api/Patients/FindByPassport?serial={p.PassportSerial}&number={p.PassportNumber}");
        //response.EnsureSuccessStatusCode();
        if (response.IsSuccessStatusCode)
        {
            var patient = await response.Content.ReadFromJsonAsync<Patient>();
            if (patient != null)
            {
                var m = new MedicalCard()
                    {
                        BeginDate = DateTime.Now,
                        Number = Guid.NewGuid().ToString(),
                        PatientId = patient.Id,

                    };

                var responseCard = await httpClient.PostAsJsonAsync("http://192.168.1.3:7029/api/MedicalCards", m);
                Console.WriteLine($"Статус: {responseCard.IsSuccessStatusCode}");

            }
            else
            {
                manager.NavigateTo("sign");
            }
        }
        else
        {
            Console.WriteLine("Статус код не прошел!");
            return;
        }

        
        
      

    }
}
